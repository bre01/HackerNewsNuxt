{
  "version": 3,
  "sources": ["../../../../.pnpm/unix-timestamp@1.0.3/node_modules/unix-timestamp/lib/timestamp.js"],
  "sourcesContent": ["/**\n * @license\n * [BSD-3-Clause](https://github.com/pryv/unix-timestamp-js/blob/master/LICENSE)\n */\n\n/**\n * Tiny library to create and manipulate Unix timestamps\n * (i.e. defined as the number of seconds since Unix epoch time).\n */\n\nconst timestamp = module.exports = {};\n\n// constants\n\ntimestamp.Millisecond = 0.001;\ntimestamp.Second = 1;\ntimestamp.Minute = 60;\ntimestamp.Hour = 60 * timestamp.Minute;\ntimestamp.Day = 24 * timestamp.Hour;\ntimestamp.Week = 7 * timestamp.Day;\n/**\n * = mean Gregorian month\n */\ntimestamp.Month = 30.436875 * timestamp.Day;\ntimestamp.Year = 12 * timestamp.Month;\n\nconst OffsetRegExp = new RegExp('^\\\\s*' +\n    '([-+]?)\\\\s*' +\n    ['y', 'M', 'w', 'd', 'h', 'm', 's', 'ms']\n      .map(function (t) { return '(?:(\\\\d+)\\\\s*' + t + ')?'; })\n      .join('\\\\s*') +\n    '\\\\s*$');\n\nlet outputFn = dontRound;\nfunction dontRound (time) { return time; }\nfunction round (time) { return Math.round(time); }\n/**\n * Set to `true` to round all returned timestamps to the second. Defaults to `false`.\n */\nObject.defineProperty(timestamp, 'round', {\n  get: function () { return outputFn === round; },\n  set: function (value) { outputFn = value ? round : dontRound; }\n});\n\n/**\n * Gets the current time as Unix timestamp.\n * Optionally applying a given offset specified as either a human-readable string or a number of\n * seconds.\n *\n * @param {String|Number} [offset] The optional time offset to apply\n * @returns {Number} The corresponding timestamp\n */\ntimestamp.now = function (offset) {\n  const now = Date.now() / 1000;\n  return outputFn(offset ? timestamp.add(now, offset) : now);\n};\n\n/**\n * Applies the given offset to the given timestamp.\n * The offset is specified as either a human-readable string or a number of\n * seconds.\n *\n * @param {Number} time The original timestamp\n * @param {String|Number} offset The time offset to apply\n * @returns {Number} The result timestamp\n */\ntimestamp.add = function (time, offset) {\n  if (!isNumber(time)) {\n    throw new Error('Time must be a number');\n  }\n  if (isString(offset)) {\n    const matches = OffsetRegExp.exec(offset);\n    if (!matches) {\n      throw new Error('Expected offset string format: [+|-] [{years}y] [{months}M] [{weeks}w] ' +\n          '[{days}d] [{hours}h] [{minutes}m] [{seconds}s] [{milliseconds}ms]');\n    }\n    offset = (matches[1] === '-' ? -1 : 1) * (\n      (matches[2] || 0) * timestamp.Year +\n      (matches[3] || 0) * timestamp.Month +\n      (matches[4] || 0) * timestamp.Week +\n      (matches[5] || 0) * timestamp.Day +\n      (matches[6] || 0) * timestamp.Hour +\n      (matches[7] || 0) * timestamp.Minute +\n      (matches[8] || 0) * timestamp.Second +\n      (matches[9] || 0) * timestamp.Millisecond\n    );\n  } else if (!isNumber(offset)) {\n    throw new Error('Offset must be either a string or a number');\n  }\n  return outputFn(time + offset);\n};\n\n/**\n * Gets the offset timestamp for the given offset string.\n * (Alias for .add() using a time of zero.)\n *\n * @param {String|Number} offset The time offset for the duration\n * @returns {Number} The result time offset\n */\ntimestamp.duration = function (offset) {\n  return timestamp.add(0, offset);\n};\n\n/**\n * Gets the Unix timestamp for the given date object or string.\n *\n * @param {Date|String} date A date object or an ISO 8601 date string\n * @returns {Number} The corresponding timestamp\n */\ntimestamp.fromDate = function (date) {\n  if (isString(date)) {\n    date = new Date(date);\n  } else if (!isDate(date)) {\n    throw new Error('Expected either a string or a date');\n  }\n  return outputFn(date.getTime() / 1000);\n};\n\n/**\n * Gets the date for the given Unix timestamp.\n *\n * @param {Number} time A timestamp\n * @returns {Date} The corresponding date\n */\ntimestamp.toDate = function (time) {\n  if (!isNumber(time)) {\n    throw new Error('Expected a number');\n  }\n  return new Date(time * 1000);\n};\n\nfunction isString (value) {\n  return typeof value === 'string' || Object.prototype.toString.call(value) === '[object String]';\n}\n\nfunction isNumber (value) {\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n\nfunction isDate (value) {\n  return Object.prototype.toString.call(value) === '[object Date]';\n}\n"],
  "mappings": "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",
  "names": []
}
